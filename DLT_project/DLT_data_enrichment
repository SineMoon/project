# Data Enrichment - Adding Derived Columns (from slide 26)
from pyspark.sql.functions import format_string, col, when, trim

# Add Date column (from slide 26)
df_final = df_grouped.withColumn(
    "Date", format_string("%s-%02d", col("Month"), (col("Year") % 100))
)

# Conditional logic for missing DLT_Model_Name (from slide 26)
merged_df = merged_df.withColumn(
    "DLT_Model_Name",
    when(trim(col("g.Model")) == "ไม่ระบุ", trim(col("g.Brand")))
    .otherwise(trim(col("d.DLT_Model_Name")))
)

# Example of standardizing model names using PySpark (from slide 30)
def standardize_model_name(model):
    if model == "คาราเวล":
        return "CARAVELLE"
    return model

# Apply the standardization
spark_df = spark_df.withColumn("Model", udf(standardize_model_name)(col("Model")))

print("Data enrichment completed with derived columns added.")
